version: "3.8"

services:
  api:
    image: node:18-alpine3.17
    container_name: dd_api
    working_dir: /usr/src/app
    environment:
      DB_URI: mongodb://mongo:27017
      NODE_ENV: development
    volumes:
      - ./api:/usr/src/app
      - ./shared:/usr/src/shared
    command: sh -c "sh ./install.sh && sh ./run.sh"
    restart: always
    ports:
      - "8001:8001"
    depends_on:
      - mongo
    networks:
      - node-network

  web:
    image: node:18-alpine3.17
    container_name: dd_web
    working_dir: /usr/src/app
    volumes:
      - ./web:/usr/src/app
      - ./shared:/usr/src/shared
    command: sh -c "sh ./install.sh && sh ./serve.sh"
    restart: always
    ports:
      - "8000:4200"
    depends_on:
      - api

  mongo:
    image: mongo:latest
    container_name: dd_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    volumes:
      - MONGO_DATA:/data/db
      # - MONGO_CONFIG:/data/configdb
    networks:
      - node-network

  mongo-express:
    image: mongo-express:latest
    container_name: dd_admin
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8002:8081"
    depends_on:
      - mongo

volumes:
  MONGO_DATA:
    name: MONGO_DATA
  MONGO_CONFIG:
    name: MONGO_CONFIG

networks:
  node-network:
    driver: bridge
